name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-encoding:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Check for encoding issues
      run: |
        python scripts/fix_encoding.py src
        
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libssl-dev libffi-dev python3-dev portaudio19-dev ffmpeg
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy black isort
        # Install build dependencies first
        pip install setuptools wheel Cython scikit-build
        # Install CI-specific dependencies
        pip install -r requirements-ci.txt
    - name: Lint with flake8
      run: |
        flake8 src tests
    - name: Type check with mypy
      run: |
        mypy src
    - name: Check code formatting
      run: |
        black --check src tests
        isort --check-only src tests
        
  test:
    runs-on: ubuntu-latest
    needs: [check-encoding, lint]
    steps:
    - uses: actions/checkout@v3
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libssl-dev libffi-dev python3-dev portaudio19-dev ffmpeg
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-cov
        # Install build dependencies first
        pip install setuptools wheel Cython scikit-build
        # Install CI-specific dependencies
        pip install -r requirements-ci.txt
    - name: Test with pytest
      run: |
        PYTHONPATH=. pytest tests/ --cov=src/ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false